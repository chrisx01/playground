<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.w3.org/1999/xhtml" xmlns:ws="http://schemas.xmlsoap.org/wsdl/" xmlns:ws2="http://www.w3.org/ns/wsdl" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" version="1.0" xmlns:exclude-result-prefixes="ws ws2 xsd soap local ">



   <!--<xsl:strip-space elements="*"/>-->

   
    

   <!--
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    Begin of included transformation: wsdl-viewer-global.xsl
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
-->
<xsl:param name="ENABLE-SERVICE-PARAGRAPH" select="true()"/>
   <!--<xsl:param name="ENABLE-OPERATIONS-PARAGRAPH" select="true()"/>-->
   <!--<xsl:param name="ENABLE-SRC-CODE-PARAGRAPH" select="true()"/>-->
   <!--<xsl:param name="ENABLE-ABOUT-PARAGRAPH" select="true()"/>-->
   <!--<xsl:param name="ENABLE-OPERATIONS-TYPE" select="true()"/>-->
   <!--<xsl:param name="ENABLE-LINK" select="true()"/>-->
   <!--<xsl:param name="ENABLE-INOUTFAULT" select="true()"/>-->
   <!--<xsl:param name="ENABLE-STYLEOPTYPEPATH" select="true()"/>-->
   <!--<xsl:param name="ENABLE-DESCRIPTION" select="true()"/>-->
   <!--<xsl:param name="ENABLE-PORTTYPE-NAME" select="true()"/>-->
   <!--<xsl:param name="ENABLE-ANTIRECURSION-PROTECTION" select="true()"/>-->
   <!--<xsl:param name="ANTIRECURSION-DEPTH">3</xsl:param>-->
   <!--<xsl:variable name="GENERATED-BY">Generated by wsdl-viewer-port.xsl</xsl:variable>-->
   <!--<xsl:variable name="PORT-TYPE-TEXT">Port type</xsl:variable>-->
   <!--<xsl:variable name="IFACE-TEXT">Interface</xsl:variable>-->
   <!--<xsl:variable name="SOURCE-CODE-TEXT">Source code</xsl:variable>-->
   <!--<xsl:variable name="RECURSIVE"> ... is recursive</xsl:variable>-->
   <!--<xsl:variable name="SRC-PREFIX">src.</xsl:variable>-->
   <!--<xsl:variable name="SRC-FILE-PREFIX">src.file.</xsl:variable>-->
   <!--<xsl:variable name="OPERATIONS-PREFIX">op.</xsl:variable>-->
   <!--<xsl:variable name="PORT-PREFIX">port.</xsl:variable>-->
   <!--<xsl:variable name="IFACE-PREFIX">iface.</xsl:variable>-->
   <xsl:variable name="global.wsdl-name" select="/*/*[(local-name() = 'import' or local-name() = 'include') and @location][1]/@location"/>
   <xsl:variable name="consolidated-wsdl" select="/* | document($global.wsdl-name)/*"/>
   <xsl:variable name="global.xsd-name" select="($consolidated-wsdl/*[local-name() = 'types']//xsd:import[@schemaLocation] | $consolidated-wsdl/*[local-name() = 'types']//xsd:include[@schemaLocation])[1]/@schemaLocation"/>
   <xsl:variable name="consolidated-xsd" select="(document($global.xsd-name)/xsd:schema/xsd:*|/*/*[local-name() = 'types']/xsd:schema/xsd:*)[local-name() = 'complexType' or local-name() = 'element' or local-name() = 'simpleType']"/>
   <xsl:variable name="global.service-name" select="concat($consolidated-wsdl/ws:service/@name, $consolidated-wsdl/ws2:service/@name)"/>
   <xsl:variable name="global.binding-name" select="concat($consolidated-wsdl/ws:binding/@name, $consolidated-wsdl/ws2:binding/@name)"/>
   <!--<xsl:variable name="html-title">
	     <xsl:apply-templates select="/*" mode="html-title.render"/>
   </xsl:variable>-->
  
<xsl:template match="@*" mode="qname.normalized">
	     <xsl:variable name="local" select="substring-after(., ':')"/>
	     <xsl:choose>
		       <xsl:when test="$local">
            <xsl:value-of select="$local"/>
         </xsl:when>
		       <xsl:otherwise>
            <xsl:value-of select="."/>
         </xsl:otherwise>
	     </xsl:choose>
   </xsl:template>
<!--
==================================================================
	Starting point
==================================================================
-->

	<xsl:template match="/">	  
		 <xsl:call-template name="body.render"/>
	</xsl:template>
   <!--
==================================================================
	Rendering: HTML body
==================================================================
-->

	<xsl:template name="body.render">  
		<xsl:call-template name="content.render"/>         
    </xsl:template>
   <!--
==================================================================
	Rendering: content
==================================================================
-->

	<xsl:template name="content.render">
    	<xsl:if test="$ENABLE-SERVICE-PARAGRAPH">
			  <xsl:call-template name="serviceUpdate.render"/>
		</xsl:if>
	</xsl:template>
   <!--
==================================================================
	Rendering: WSDL service information
==================================================================
-->   
   <xsl:template name="serviceUpdate.render">
       <xsl:apply-templates select="$consolidated-wsdl/ws:service|$consolidated-wsdl/ws2:service" mode="serviceUpdate-start"/>
   </xsl:template>


   <xsl:template match="ws:service|ws2:service" mode="serviceUpdate-start">
       <xsl:apply-templates select="ws:port|ws2:endpoint" mode="serviceUpdate"/>
   </xsl:template>   

   <xsl:template match="ws:port|ws2:endpoint" mode="serviceUpdate">
		 <xsl:variable name="binding-name">
		       <xsl:apply-templates select="@binding" mode="qname.normalized"/>
	     </xsl:variable>
		  <xsl:variable name="end-point" select="*[local-name() = 'address']/@location"/>		   
	     <xsl:variable name="binding" select="$consolidated-wsdl/ws:binding[@name = $binding-name]"/>
	     <xsl:variable name="port-type-name">
		       <xsl:apply-templates select="$binding/@type" mode="qname.normalized"/>
	     </xsl:variable>
		<xsl:text>&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</xsl:text> 			
		<xsl:text>&lt;Operations&gt;</xsl:text>				
			<xsl:apply-templates select="$consolidated-wsdl/ws:portType[@name = $port-type-name]/ws:operation" mode="serviceUpdate">
				 <xsl:sort select="@name"/> 
			</xsl:apply-templates>		      
		 <xsl:text>&lt;/Operations&gt;</xsl:text>		  				
		 <xsl:text>&lt;location&gt;</xsl:text>	
			 <xsl:value-of select="*[local-name() = 'address']/@location"/> 
		<xsl:text>&lt;/location&gt;</xsl:text>			
		   
	</xsl:template>
	
	<xsl:template match="ws:operation|ws2:operation" mode="serviceUpdate">	    
			  <xsl:text>&lt;Item&gt;</xsl:text> <xsl:value-of select="@name"/> <xsl:text>&lt;/Item&gt;</xsl:text>              
	</xsl:template>

</xsl:stylesheet>